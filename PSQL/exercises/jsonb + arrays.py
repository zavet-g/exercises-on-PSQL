import psycopg2
import json

DB_CONFIG = {
    "dbname": "python_db",
    "user": "dev_user",
    "password": "12345"
}


def create_table():
    try:
        with psycopg2.connect(**DB_CONFIG) as conn:
            with conn.cursor() as cursor:
                cursor.execute('''
                CREATE TABLE IF NOT EXISTS users(
                id SERIAL PRIMARY KEY,
                username VARCHAR(100) NOT NULL,
                preferences JSONB,
                favorite_products INT[]
                );
                ''')
                conn.commit()
    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")


def insert_users():
    conn = None
    try:
        conn = psycopg2.connect(**DB_CONFIG)
        with conn.cursor() as cursor:
            users_data = [
                ("user1", {"theme": "dark", "language": "ru"}, [2, 5, 8]),
                ("user2", {"theme": "light", "language": "en"}, [1, 4]),
                ("user3", {"theme": "dark", "language": "ru"}, [3, 6, 9]),
                ("user4", {"theme": "light", "language": "de"}, [2, 7]),
                ("user5", {"theme": "dark", "language": "en"}, [5, 10]),
            ]
            cursor.executemany('''
            INSERT INTO users (username, preferences, favorite_products) VALUES (%s, %s, %s);
            ''', [(u, json.dumps(p), f) for u, p, f in users_data])
            print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

        conn.commit()  # ‚úÖ –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ

    except psycopg2.Error as e:
        if conn:
            conn.rollback()  # ‚ùå –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

    finally:
        if conn:
            conn.close()  # ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ


def search_users():
    try:
        with psycopg2.connect(**DB_CONFIG) as conn:
            with conn.cursor() as cursor:
                cursor.execute('''
                SELECT * FROM users WHERE preferences->>'language' = 'ru'
                ''')
                result = cursor.fetchall()
                if result:
                    for row in result:
                        print(row)
                else:
                    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —è–∑—ã–∫–æ–º 'ru' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

def fav_users():
    try:
        with psycopg2.connect(**DB_CONFIG) as conn:
            with conn.cursor() as cursor:
                cursor.execute('''
                SELECT id, username, preferences, favorite_products
                FROM users 
                WHERE 3 = ANY(favorite_products);
                ''')
                result = cursor.fetchall()
                if result:
                    print("üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ª—é–±–∏–º—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º 3:")
                    for row in result:
                        user = {
                            "id": row[0],
                            "username": row[1],
                            "preferences": row[2],
                            "favorite_products": row[3]
                        }
                        print(json.dumps(user, indent=4, ensure_ascii=False))
                else:
                    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å id(favorite_products) = 3 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

def add_gin_index():
    try:
        with psycopg2.connect(**DB_CONFIG) as conn:
            with conn.cursor() as cursor:
                cursor.execute('''
                CREATE INDEX IF NOT EXISTS idx_users_preferences ON users USING GIN (preferences);
                CREATE INDEX IF NOT EXISTS idx_users_favorite_products ON users USING GIN (favorite_products);
                ''')
                conn.commit()
                print("‚úÖ GIN-–∏–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ GIN-–∏–Ω–¥–µ–∫—Å–æ–≤: {e}")

def analyze_speed():
    try:
        with psycopg2.connect(**DB_CONFIG) as conn:
            with conn.cursor() as cursor:
                print("üîπ –ê–Ω–∞–ª–∏–∑ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞ –ø–æ —è–∑—ã–∫—É (JSONB)")
                cursor.execute("EXPLAIN ANALYZE SELECT * FROM users WHERE preferences->>'language' = 'ru';")
                print("\n".join(row[0] for row in cursor.fetchall()))

                print("\nüîπ –ê–Ω–∞–ª–∏–∑ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –º–∞—Å—Å–∏–≤—É (favorite_products)")
                cursor.execute("EXPLAIN ANALYZE SELECT * FROM users WHERE 3 = ANY(favorite_products);")
                print("\n".join(row[0] for row in cursor.fetchall()))

    except psycopg2.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
